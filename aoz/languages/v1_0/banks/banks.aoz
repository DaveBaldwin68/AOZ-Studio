/*@*****************************************************************************
*                                                                              *
*   █████╗  ██████╗ ███████╗    ███████╗████████╗██╗   ██╗██████╗ ██╗ ██████╗  *
*  ██╔══██╗██╔═══██╗╚══███╔╝    ██╔════╝╚══██╔══╝██║   ██║██╔══██╗██║██╔═══██╗ *
*  ███████║██║   ██║  ███╔╝     ███████╗   ██║   ██║   ██║██║  ██║██║██║   ██║ *
*  ██╔══██║██║   ██║ ███╔╝      ╚════██║   ██║   ██║   ██║██║  ██║██║██║   ██║ *
*  ██║  ██║╚██████╔╝███████╗    ███████║   ██║   ╚██████╔╝██████╔╝██║╚██████╔╝ *
*  ╚═╝  ╚═╝ ╚═════╝ ╚══════╝    ╚══════╝   ╚═╝    ╚═════╝ ╚═════╝ ╚═╝ ╚═════╝  *
*                                                                              *
* This file is part of AOZ Studio.                                             *
* Copyright (c) AOZ Studio. All rights reserved.                               *
*                                                                              *
* Licensed under the GNU General Public License v3.0.                          *
* More info at: https://choosealicense.com/licenses/gpl-3.0/                   *
* And in the file AOZ_StudioCodeLicense.pdf.                                   *
*                                                                              *
*****************************************************************************@*/
/** @file
 *
 * The AOZ Music Instruction Set
 * By Francois Lionet
 *
 * Using the new modular language syntax system
 * Program the language with the language.
 *
 * @author FL
 * @date first pushed on 27/10/2019
 */
#warning_off:"instruction_not_implemented"

//
// Initialization
//
{
    this.aoz.moduleBanks = this;
}

Instruction "bank swap", _number1, _number2
{
    #error
    this.aoz.banks.bankSwap(%_number1,%_number2);
}
End Instruction

Instruction "bank shrink", _number, _length
{
    #error
    this.aoz.banks.bankShrink(%_number,%_length);
}
End Instruction

Function "start", _number
{
    #error
}
End Function( {this.aoz.banks.getStart(%_number)} )

Function "length", _number
{
    #error
}
End Function( {this.aoz.banks.getLength(%_number)} )

Instruction "erase", _number
{
    #error
    this.aoz.banks.erase(%_number);
}
End Instruction

Instruction "list bank", _number
{
    #error
    this.aoz.banks.listBank();
}
End Instruction

Instruction "reserve as work", _number, _length
{
    #error
    this.aoz.banks.reserve(%_number,"work",%_length);
}
End Instruction
Instruction "reserve as chip work", _number, _length
{
    #error
    this.aoz.banks.reserve(%_number,"work",%_length);
}
End Instruction

Instruction "reserve as data", _number, _length
{
    #error
    this.aoz.banks.reserve(%_number,"data",%_length);
}
End Instruction
Instruction "reserve as chip data", _number, _length
{
    #error
    this.aoz.banks.reserve(%_number,"data",%_length);
}
End Instruction

Function "image width", _image
{
	#errors
}
End Function( {this.aoz.banks.getImageWidth(%_image)} )
Function "image height", _image
{
	#errors
}
End Function( {this.aoz.banks.getImageHeight(%_image)} )

Function "hrev", _image
{
}
End Function( {(%_image|0x8000)} )
Function "vrev", _image
{
}
End Function( {(%_image|0x4000)} )
Function "rev", _image
{
}
End Function( {(%_image|0xC000)} )

// Sprites banks
//////////////////////////////////////////////////////////////////////
Instruction "ins sprite", _number
{
	#errors
	this.aoz.banks.insertImage('images',%_number);
}
End Instruction
Instruction "ins sprite", _theStart To _theEnd
{
	#errors
	this.aoz.banks.insertImageRange('images',%_theStart,%_theEnd);
}
End Instruction
Instruction "del sprite", _number
{
	#errors
	this.aoz.banks.deleteImage('images',%_number);
}
End Instruction
Instruction "del sprite", _number1 To _number2
{
	#errors
	this.aoz.banks.deleteImageRange('images',%_number1,%_number2);
}
End Instruction

// Bobs
///////////////////////////////////////////////////////////////////////
Instruction "ins bob", _number
{
	#errors
	this.aoz.banks.insertImage('images',%_number);
}
End Instruction
Instruction "ins bob", _theStart To _theEnd
{
	#errors #errors
	this.aoz.banks.insertImageRange('images',%_theStart,%_theEnd);
}
End Instruction
Instruction "del bob", _number
{
	#errors
	this.aoz.banks.deleteImage('images',%_number);
}
End Instruction
Instruction "del bob", _number1 To _number2
{
	#errors
	this.aoz.banks.deleteImageRange('images',%_number1,%_number2);
}
End Instruction
Instruction "make mask", _number
{
	#errors
	this.aoz.banks.processMask('images',%_number,true);
}
End Instruction
Instruction "no mask", _number
{
	#errors
	this.aoz.banks.processMask('images',%_number,false);
}
End Instruction
Instruction "hot spot", _number, _x, _y
{
	#errors
	this.aoz.banks.setImageHotSpot("images",%_number,{x:%_x,y:%_y});
}
End Instruction
Instruction "hot spot", _number, _mask
{
	#errors
	this.aoz.banks.setImageHotSpot("images",%_number,{x:"mask",y:%_mask});
}
End Instruction

// Icons
///////////////////////////////////////////////////////////////////////
Instruction "ins icon", _number
{
	#errors
	this.aoz.banks.insertImage('icons',%_number);
}
End Instruction
Instruction "ins icon", _theStart To _theEnd
{
	#errors #errors
	this.aoz.banks.insertImageRange('icons',%_theStart,%_theEnd);
}
End Instruction
Instruction "del icon", _number
{
	#errors
	this.aoz.banks.deleteImage('icons',%_number);
}
End Instruction
Instruction "del icon", _number1 To _number2
{
	#errors
	this.aoz.banks.deleteImageRange('icons',%_number1,%_number2);
}
End Instruction
Instruction "make icon mask", _number
{
	#errors
	this.aoz.banks.processMask('icons',%_number,true);
}
End Instruction
Instruction "no icon mask", _number
{
	#errors
	this.aoz.banks.processMask('icons',%_number,false);
}
End Instruction
