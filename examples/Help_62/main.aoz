//
// Help_62.AMOS - Converted to AOZ on the 27/01/2020-16:09:07
//
#manifest:"amiga"
#speed:"safe"

'**********************************
'*    AMOS Professional HELP 62   *              SUBJECTS COVERED
'*                                *
'*     (c) Europress Software     *           Copper Off/On (line 19)  
'*                                *           Cop Move / l  (line 31)    
'*         Ronnie Simpson         *           Cop Wait      (line 46)  
'**********************************           Cop Reset     (line 60)  
'                                             Cop Logic     (line 68)  
'                                             Cop Swap      (line 78)  
'------------------------------------------- 
'Warning 
'------------------------------------------- 
'The Amiga's co-processor (copper) is difficult to program and unless you
'know exactly what you are doing you will without doubt crash the machine. 
'Most of the commands listed below can be emulated from within Amos Pro. 
'without resorting to the complicated programming involved, but for experts
'who wish to produce special screen modes here is a list of the commands.
'------------------------------------------- 
'Copper Off / On 
'------------------------------------------- 
'turn off and on standard copper list  
'
'Copper Off turns of the screen display and allows creation of your custom 
'screens. As a default copper lists are limited to 12K but this can be 
'altered from the config. utility. 
'Copper lists must be generated by working from top left to bottom right.
'
'Copper On restarts the AMOS Professional current screen.
'
'------------------------------------------- 
'Cop Move / Cop Movel
'------------------------------------------- 
'write a move instruction
'
'Copper Move generates a move instruction to the logical copper list:- 
'
'              Cop Move address,value
'
'The address is the 16 bit register to be changed in the copper data zone. 
'
'              Cop Movel address,value 
'
'With Cop Movel the address is the 32 bit register to be changed.
'
'------------------------------------------- 
'Cop Wait
'------------------------------------------- 
'copper wait instruction 
'
'Cop Wait writes a wait instruction into the copper list 
'
'              Cop Wait X,Y [ ,X mask,Y mask ] 
'
'X and Y are hardware coordinates to be reached before control is returned 
'to the main processor.
'X mask and Y mask are optional bit maps to test for certain combinations of 
'bits at the X,Y coordinates. (default of both masks are $1FF) 
'
'------------------------------------------- 
'Cop Reset 
'------------------------------------------- 
'reset copper list pointer 
'
'This command restores the address used by the next copper instruction to
'the start of the list.
'
'------------------------------------------- 
'Cop Logic 
'------------------------------------------- 
'get address of copper list
'
'This function returns the absolute address in memory of the logical copper  
'list. 
'
'                        ADDR=Cop Logic
'
'------------------------------------------- 
'Cop Swap
'------------------------------------------- 
'swap physical and logical lists 
'
'Activates the new list by swapping the physical and logical copper lists. 
'
'For example- in double buffered mode:-  
'
'         1) Define copper list for first screen 
'         2) Swap logical and physical copper lists with Cop Swap  
'         3) Swap logical and physical screens with Screen Swap  
'         4) Define copper list for second screen  
'
'------------------------------------------- 
'WORKING EXAMPLE   
'------------------------------------------- 
Screen Open 1,320,256,2,Lowres : Hide 
Curs Off : Cls 0 : Colour 1,$FF0
Locate 0,12 : Centre "PRESS ANY MOUSE KEY TO QUIT"
Wait 150 : Fade 5 : Wait 80
Screen Open 0,320,256,16,Lowres
Cls 0 : Flash Off 
Rem *** turn off AMOS Pro. copperlist
Copper Off 
'
Rem *** initialise new copper list   
Cop Move $102,0
Cop Move $104,0
Cop Move $108,0
Cop Move $10A,0
Cop Move $8E,$3081
Cop Move $90,$30C1
Cop Move $92,$38
Cop Move $94,$D3
'
Rem *** loop from this point 
Do 
   Rem *** give copper the address of the current screen
   Cop Movel $E0,Logbase(0)
   Cop Movel $E4,Logbase(1)
   Cop Movel $E8,Logbase(2)
   Cop Movel $EC,Logbase(3)
   Cop Move $100,$4200
   Cop Move $96,$8180
   Rem Create a custom copper list
   A=Rnd(4000)
   R=Rnd(32)*4
   For Y=72 To 216 Step 2
      For C=0 To 15
         Cop Wait 0,Y
         Cop Move $180+C*2,Y*R+A
      Next C
   Next Y
   Rem *** set end of copper list 
   Cop Wait 254,255
   Rem *** activate new screen
   Cop Swap 
   Wait Vbl 
   Exit If Mouse Key
Loop 
'
Copper On 
Edit 
